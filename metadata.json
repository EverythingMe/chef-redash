{
  "name": "redash",
  "description": "Installs/Configures re:dash",
  "long_description": "redash Cookbook\n=================\nThis cookbook installs redash from GitHub release.\n\nRequirements\n------------\nTested with latest Chef version 11.8.0\n\n### Tested With Platforms\n* Ubuntu 12.04 LTS\n\n### Cookbooks\nThe following cookbooks are dependencies (through metadata.rb and Berkshelf):\n* postgresql\n* python\n* ark\n* database\n\n\nAttributes\n----------\n\n### Default\n\n- `node['redash']['path']` - base path for re:dash related directories (install directory, virtualenv, etc) (default: `'/opt/redash'`)\n- `node['redash']['tarball_url']` - URL of re:dash tarball to install (default: url of version v0.3.5b175)\n- `node['redash']['version']` - re:dash version (default: extracted from tarball filename)\n- `node['redash']['checksum']` - SHA256 checksum of the tarball.\n- `node['redash']['install_tarball']` - True by default. Set this to false when you don't want the tarball downloaded / extracted. Rather, you are expected to make `/opt/redash/curernt` (or `node['redash']['path']/current`) available by other means, such as a graft of a developer's local workspace. Note that the directory must contain the bower packages and you need to update `node['redash']['config']['static_assets_path']` if you're using uncompiled version.\n- `node['redash']['user']` - user for re:dash (both system user & PostgreSQL user).\n\nThe following properties define the PostgreSQL database re:dash uses for its metadata. This is only needed if you want to use the `redash::database` recipe to create the user and database. The default values use assume PostgreSQL runs locally and use attributes to determine username and password:\n\n- `node['redash']['db']['host]`\n- `node['redash']['db']['port]`\n- `node['redash']['db']['username]`\n- `node['redash']['db']['password]`\n\nThe following define gunicorn configuration:\n\n- `node['redash']['web']['workers_count']` -  number of gunicorn workers to use (defualt: 4).\n- `node['redash']['web']['port']` - port to bind gunicorn on (default: 5000).\n\nThe following are used to write the configuration file:\n\n- `node['redash']['config']['database_url']` - database URL of the metadata database (default:  'postgresql://redash:super_secret@localhost/redash')\n- `node['redash']['config']['redis_url']` - URL of the Redis server (default: 'redis://localhost:6379')\n- `node['redash']['config']['google_apps_domain']` - Google Apps domain to authenticate with. **If left nil/blank, it will accept any Google Apps (or Gmail) domain.** (default: nil)\n- `node['redash']['config']['admins']` - comma separated list of emails of users with admin privilliges (it doesn't create the users, but when they login they will have admin rights) (defualt: nil)\n- `node['redash']['config']['static_assets_path']` - path to statis assets (if relative, then relative to code) (default: \"../rd_ui/dist/\")\n- `node['redash']['config']['workers_count']` - updater workers count (default: 2)\n- `node['redash']['config']['cookie_secret']` - secret used to encrypt cookies. **Make sure to change; specially on production deployments.** (default: 'c292a0a3aa32397cdb050e233733900f')\n- `node['redash']['config']['log_level']` - logging level (default: 'INFO')\n\nSettings for the re:dash datasource:\n\n- `node['redash']['config']['connection_adapter']` = 'pg'\n- `node['redash']['config']['connection_string']` = 'user=redash password=super_secret host=localhost dbname=redash'\n\nBy default it's configured to query its own meta database (for demo purposes only). See [wiki](https://github.com/EverythingMe/redash/wiki/re:dash-connection-adapter-options) for additional options.\n\nrunit related settings:\n\n- `node['redash']['server']['log']` = './main'\n- `node['redash']['worker']['log']` = './main'\n- `node['redash']['svlog_opt']` = '-tt'\n\n\nUsage\n-----\n#### redash::default\nIncludes the deploy, configuration and services recipes.\n\n#### redash::deploy\nDeploys the codebase, configuration (using the `redash::configuration` recipe) and pip packages (requirements.txt and gunicorn).\n\n#### redash::configuration\nCreated the configuration file (the env.sh executable that exports relevant settings).\n\n#### redash::services\nSetups runit services to run the web server and updater.\n\n#### redash::redis\n\nNaive recipe to install Redis server from package.\n\n#### redash::database\n\nCreated Postgresql database and user for re:dash.\n\n#### redash::nginx\n\nInstalls nginx and setups proxy for re:dash.\n\n\nContributing\n------------\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\nLicense\n-------\nSee [LICENSE](https://github.com/EverythingMe/chef-redash/blob/master/LICENSE) file.\n\n",
  "maintainer": "EverythingMe",
  "maintainer_email": "devops@everything.me",
  "license": "All rights reserved",
  "platforms": {
  },
  "dependencies": {
    "postgresql": ">= 0.0.0",
    "python": ">= 0.0.0",
    "ark": ">= 0.0.0",
    "database": ">= 0.0.0",
    "nginx": ">= 0.0.0",
    "runit": ">= 1.1.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  },
  "version": "0.4.0"
}
